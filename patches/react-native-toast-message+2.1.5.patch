diff --git a/node_modules/react-native-toast-message/lib/src/components/BaseToast.js b/node_modules/react-native-toast-message/lib/src/components/BaseToast.js
index 21c4786..717b27b 100644
--- a/node_modules/react-native-toast-message/lib/src/components/BaseToast.js
+++ b/node_modules/react-native-toast-message/lib/src/components/BaseToast.js
@@ -3,7 +3,7 @@ import { Text, View } from 'react-native';
 import { getTestId } from '../utils/test-id';
 import { styles } from './BaseToast.styles';
 import { Touchable } from './Touchable';
-export function BaseToast({ text1, text2, onPress, activeOpacity, style, touchableContainerProps, contentContainerStyle, contentContainerProps, text1Style, text1NumberOfLines = 1, text1Props, text2Style, text2NumberOfLines = 1, text2Props, renderLeadingIcon, renderTrailingIcon }) {
+export function BaseToast({ text1, text2, onPress, activeOpacity, style, touchableContainerProps, contentContainerStyle, contentContainerProps, text1Style, text1NumberOfLines = 0, text1Props, text2Style, text2NumberOfLines = 0, text2Props, renderLeadingIcon, renderTrailingIcon }) {
     return (<Touchable testID={getTestId('TouchableContainer')} onPress={onPress} activeOpacity={activeOpacity} style={[styles.base, styles.leadingBorder, style]} {...touchableContainerProps}>
       {renderLeadingIcon && renderLeadingIcon()}
       <View testID={getTestId('ContentContainer')} style={[styles.contentContainer, contentContainerStyle]} {...contentContainerProps}>
diff --git a/node_modules/react-native-toast-message/lib/src/useToast.js b/node_modules/react-native-toast-message/lib/src/useToast.js
index 5794b67..b578b78 100644
--- a/node_modules/react-native-toast-message/lib/src/useToast.js
+++ b/node_modules/react-native-toast-message/lib/src/useToast.js
@@ -1,4 +1,5 @@
 import React from 'react';
+import { useSafeAreaInsets } from 'react-native-safe-area-context';
 import { useLogger } from './contexts';
 import { useTimeout } from './hooks';
 import { noop } from './utils/func';
@@ -26,6 +27,7 @@ export function useToast({ defaultOptions }) {
     const [data, setData] = React.useState(DEFAULT_DATA);
     const initialOptions = mergeIfDefined(DEFAULT_OPTIONS, defaultOptions);
     const [options, setOptions] = React.useState(initialOptions);
+    const {top} = useSafeAreaInsets()
     const onAutoHide = React.useCallback(() => {
         log('Auto hiding');
         setIsVisible(false);
@@ -50,7 +52,7 @@ export function useToast({ defaultOptions }) {
             position,
             autoHide,
             visibilityTime,
-            topOffset,
+            topOffset: topOffset + top,
             bottomOffset,
             keyboardOffset,
             onShow,
